{"ast":null,"code":"(function (factory, window) {\n  // define an AMD module that relies on 'leaflet'\n  if (typeof define === 'function' && define.amd) {\n    define(['leaflet', 'spin.js'], function (L, Spinner) {\n      factory(L, Spinner);\n    }); // define a Common JS module that relies on 'leaflet'\n  } else if (typeof exports === 'object') {\n    module.exports = function (L, Spinner) {\n      if (L === undefined) {\n        L = require('leaflet');\n      }\n\n      if (Spinner === undefined) {\n        Spinner = require('spin.js');\n      }\n\n      factory(L, Spinner);\n      return L;\n    }; // attach your plugin to the global 'L' variable\n\n  } else if (typeof window !== 'undefined' && window.L && window.Spinner) {\n    factory(window.L, window.Spinner);\n  }\n})(function leafletSpinFactory(L, Spinner) {\n  var SpinMapMixin = {\n    spin: function (state, options) {\n      if (!!state) {\n        // start spinning !\n        if (!this._spinner) {\n          this._spinner = new Spinner(options).spin(this._container);\n          this._spinning = 0;\n        }\n\n        this._spinning++;\n      } else {\n        this._spinning--;\n\n        if (this._spinning <= 0) {\n          // end spinning !\n          if (this._spinner) {\n            this._spinner.stop();\n\n            this._spinner = null;\n          }\n        }\n      }\n    }\n  };\n\n  var SpinMapInitHook = function () {\n    this.on('layeradd', function (e) {\n      // If added layer is currently loading, spin !\n      if (e.layer.loading) this.spin(true);\n      if (typeof e.layer.on !== 'function') return;\n      e.layer.on('data:loading', function () {\n        this.spin(true);\n      }, this);\n      e.layer.on('data:loaded', function () {\n        this.spin(false);\n      }, this);\n    }, this);\n    this.on('layerremove', function (e) {\n      // Clean-up\n      if (e.layer.loading) this.spin(false);\n      if (typeof e.layer.on !== 'function') return;\n      e.layer.off('data:loaded');\n      e.layer.off('data:loading');\n    }, this);\n  };\n\n  L.Map.include(SpinMapMixin);\n  L.Map.addInitHook(SpinMapInitHook);\n}, window);","map":{"version":3,"sources":["/home/fxr/Documents/datacritica/mapeo_huertos/mapeo-huertos/node_modules/leaflet-spin/leaflet.spin.js"],"names":["factory","window","define","amd","L","Spinner","exports","module","undefined","require","leafletSpinFactory","SpinMapMixin","spin","state","options","_spinner","_container","_spinning","stop","SpinMapInitHook","on","e","layer","loading","off","Map","include","addInitHook"],"mappings":"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","sourcesContent":["(function (factory, window) {\n    // define an AMD module that relies on 'leaflet'\n    if (typeof define === 'function' && define.amd) {\n        define(['leaflet','spin.js'], function (L, Spinner) {\n            factory(L, Spinner);\n        });\n\n    // define a Common JS module that relies on 'leaflet'\n    } else if (typeof exports === 'object') {\n        module.exports = function (L, Spinner) {\n            if (L === undefined) {\n                L = require('leaflet');\n            }\n            if (Spinner === undefined) {\n                Spinner = require('spin.js');\n            }\n            factory(L, Spinner);\n            return L;\n        };\n    // attach your plugin to the global 'L' variable\n    } else if (typeof window !== 'undefined' && window.L && window.Spinner) {\n        factory(window.L, window.Spinner);\n    }\n}(function leafletSpinFactory(L, Spinner) {\n    var SpinMapMixin = {\n        spin: function (state, options) {\n            if (!!state) {\n                // start spinning !\n                if (!this._spinner) {\n                    this._spinner = new Spinner(options)\n                        .spin(this._container);\n                    this._spinning = 0;\n                }\n                this._spinning++;\n            }\n            else {\n                this._spinning--;\n                if (this._spinning <= 0) {\n                    // end spinning !\n                    if (this._spinner) {\n                        this._spinner.stop();\n                        this._spinner = null;\n                    }\n                }\n            }\n        }\n    };\n\n    var SpinMapInitHook = function () {\n        this.on('layeradd', function (e) {\n            // If added layer is currently loading, spin !\n            if (e.layer.loading) this.spin(true);\n            if (typeof e.layer.on !== 'function') return;\n            e.layer.on('data:loading', function () {\n                this.spin(true);\n            }, this);\n            e.layer.on('data:loaded',  function () {\n                this.spin(false);\n            }, this);\n        }, this);\n        this.on('layerremove', function (e) {\n            // Clean-up\n            if (e.layer.loading) this.spin(false);\n            if (typeof e.layer.on !== 'function') return;\n            e.layer.off('data:loaded');\n            e.layer.off('data:loading');\n        }, this);\n    };\n\n    L.Map.include(SpinMapMixin);\n    L.Map.addInitHook(SpinMapInitHook);\n}, window));\n"]},"metadata":{},"sourceType":"script"}